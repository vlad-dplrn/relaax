---

# This is an example of configuration to "run" sample algorithms w/ sample clients
# This sample main purpose to demonstrate wiring of the client and algorithms
# To run this "training" set algorithm/path to relaax algorithm location 'algorithms/sample'
# Start parameter server
# relaax-parameter-server --config sample.yaml
# Start RLX server
# relaax-rlx-server --config sample.yaml
# run client
# python client/sample_exchange.py

environment:
  run: client/da3c_env
  rom: boxing.bin
  rlx-server: localhost:7001

relaax-parameter-server:
  log-level: INFO
  bind: localhost:7000
  checkpoint-dir: training/checkpoints/sample_da3c_test_env
#  checkpoint-aws-s3: dl-checkpoints/sample_da3c_test_env
  checkpoint-time-interval: 60
#  checkpoint-step-interval: 1000
  checkpoints-to-keep: 5
  aws-keys: aws_keys.yaml
  metrics-dir: training/metrics/sample_da3c_test_env

relaax-rlx-server:
  bind: localhost:7001
  log-level: DEBUG

algorithm:
  path: ../algorithms/da3c

  action_size: 2                  # action size for given game rom (18 fits ale boxing)
  state_shape: [84, 84]           # dimensions of input screen frame of an Atari game
  history_len: 4                  # number of observations to stack in state
  batch_size: 5                   # local loop size for one episode
  gpu: false                      # to use GPU, set to the True
  lstm: false                     # to use LSTM instead of FF, set to the True
  max_global_step: 1e8            # amount of maximum global steps to pass through the training

  initial_learning_rate: 7e-4
  entropy_beta: 0.01              # entropy regularization constant
  rewards_gamma: 0.99             # rewards discount factor
  RMSProp:
    decay: 0.99
    epsilon: 0.1
    gradient_norm_clipping: 40
